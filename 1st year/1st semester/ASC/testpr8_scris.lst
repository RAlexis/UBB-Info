     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  extern printf
    11                                  import printf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 6608                        a dw 2150
    16 00000002 06                          b db 6
    17                                      
    18 00000003 436174756C20256420-         format_int db "Catul %d si restul %d", 0
    18 0000000C 73692072657374756C-
    18 00000015 20256400           
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ;mov eax, 0
    24 00000000 66A1[00000000]                  mov ax, [a]
    25 00000006 66BA0000                        mov dx, 0
    26                                          ;movzx eax, ax
    27                                          
    28                                          ;push eax
    29                                          ;pop ax
    30                                          ;pop dx
    31                                          
    32 0000000A 8A1D[02000000]                  mov bl, [b]
    33                                          ;movzx bx, bl
    34 00000010 B700                            mov bh, 0
    35                                          
    36 00000012 66F7F3                          div bx
    37                                         
    38                                          ;dx - restul
    39                                          ;ax - catul
    40                                          
    41 00000015 0FB7D2                          movzx edx, dx ; restul
    42 00000018 0FB7C0                          movzx eax, ax ; catul
    43                                          
    44 0000001B 52                              push dword edx
    45 0000001C 50                              push dword eax
    46 0000001D 68[03000000]                    push dword format_int
    47 00000022 FF15[00000000]                  call [printf]
    48 00000028 83C40C                          add esp, 12
    49                                      
    50                                          ; exit(0)
    51 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
